<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--	
	UserMapper.xml :: SQL 를 갖는 MetaData 
	
	- MyBatis Framework 은 XML MetaData 를 사용 SQL구문을 관리
	  (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함)
	- SQL문의 입력(?) / 출력(?)을 매핑한다.  <== 아래의 select element 참조
 -->		
 					
<mapper namespace="PurchaseMapper">

  	<resultMap id="purchaseSelectMap" type="purchase" >
  		<result property="tranNo" column ="tran_no" jdbcType ="NUMERIC"/>
  		<result property="purchaseProd.prodNo" column ="prod_no" jdbcType ="NUMERIC"/>
  		<result property="buyer.userId" column ="buyer_id" jdbcType ="VARCHAR"/>
  		<result property="paymentOption" column ="payment_option" jdbcType ="CHAR"/>
  		<result property="receiverName" column ="receiver_name" jdbcType ="VARCHAR"/>
  		<result property="receiverPhone" column ="receiver_phone" jdbcType ="VARCHAR"/>
  		<result property="divyAddr" column ="dlvy_addr" jdbcType ="VARCHAR"/>
  		<result property="divyRequest" column ="dlvy_request" jdbcType ="VARCHAR"/>
  		<result property="tranCode" column ="tran_status_code" jdbcType ="VARCHAR"/>
  		<result property="orderDate" column ="order_data" jdbcType ="DATE"/>
  		<result property="divyDate" column ="dlvy_date" jdbcType ="DATE"/>
  	
  	</resultMap>	
  	
   	<insert id="addPurchase"	parameterType= "purchase">
		INSERT
		INTO transaction(tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,
							dlvy_addr,dlvy_request,tran_status_code,order_data,dlvy_date)
		VALUES(	seq_transaction_tran_no.nextval,
				#{purchaseProd.prodNo},
				#{buyer.userId},
				#{paymentOption:VARCHAR},
				#{receiverName:VARCHAR},
				#{receiverPhone:VARCHAR},
				#{divyAddr:VARCHAR},
				#{divyRequest:VARCHAR},
				'1',
				SYSDATE,
				#{divyDate:DATE} )
  	</insert>  	

	<select id="getPurchase"	parameterType="int" resultMap ="purchaseSelectMap">
		SELECT
		tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,
							dlvy_addr,dlvy_request,tran_status_code,order_data,dlvy_date	
		FROM transaction
		WHERE tran_no = #{value}
	</select>
	
	<select id="getPurchase2"	parameterType="int" resultMap ="purchaseSelectMap">
		SELECT
		tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,
							dlvy_addr,dlvy_request,tran_status_code,order_data,dlvy_date	
		FROM transaction
		WHERE prod_no = #{value}
	</select>	
	
	<update id="updatePurchase" parameterType = "purchase">
  		UPDATE transaction
  	<set>
  	  payment_option =#{paymentOption:CHAR},
  	  receiver_name =#{receiverName:VARCHAR},
  	  receiver_phone =#{receiverPhone:VARCHAR},
  	  dlvy_addr=#{divyAddr:VARCHAR},
  	  dlvy_request=#{divyRequest:VARCHAR},
  	  dlvy_date=#{divyDate:DATE}
  	</set>
  	WHERE tran_no = #{tranNo}
  	</update> 
  	
 	<update id="updateTranCode" parameterType = "purchase">
  		UPDATE transaction
  	<set>
  	  tran_status_code = #{tranCode}
  	</set>
  	WHERE prod_no = #{purchaseProd.prodNo}
  	</update>  	
  	
  	<select id="getPurchaseList" parameterType= "map" resultMap ="purchaseSelectMap">
  		SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT 
	  						tran_no,prod_no,buyer_id,payment_option,receiver_name,receiver_phone,
							dlvy_addr,dlvy_request,tran_status_code,order_data,dlvy_date
											FROM transaction
											where buyer_id =#{buyerId}
											ORDER BY 1 ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
  	</select>
  	
  	<select  id="getTotalCount"  parameterType="string"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT * FROM transaction
	  	<where>
	  		buyer_id=#{value}
	  	</where>
	  	 ) countTable						
	 </select> 
</mapper>